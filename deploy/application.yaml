apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot
  labels:
    app.kubernetes.io/name: bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bot
    spec:
      securityContext:
        runAsUser: 0
      restartPolicy: Always
      containers:
        - name: service
          image: localhost:32000/bot:latest
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            periodSeconds: 10
            failureThreshold: 60
          resources:
            limits:
              cpu: "1"
              memory: 800Mi
            requests:
              cpu: 250m
              memory: 800Mi
          env:
            - name: SPRING_KAFKA_BOOTSTRAPSERVERS
              value: "kafka-headless:9092"
            - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
              value: "SASL_PLAINTEXT"
            - name: SPRING_KAFKA_PROPERTIES_SASL_MECHANISM
              value: "SCRAM-SHA-512"
            - name: SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG
              value: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="user" password="${USER_PASSWORD}";'
          envFrom:
            - secretRef:
                name: kafka-ui-secret
---
apiVersion: v1
kind: Service
metadata:
  name: bot
  labels:
    app.kubernetes.io/name: team4
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: bot